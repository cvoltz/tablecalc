Bottom: 2f4acd57dbdf2f0bf58fc25a86580ebf5865ec1a
Top:    5d87538a728bb654c0aa8a41e52d55379c3d4967
Author: Christopher Voltz <cjunk@voltz.ws>
Date:   2017-05-01 22:48:07 -0500

Refresh of rm-whitespace

---

diff --git a/script.js b/script.js
index 4d6cb43..327098f 100644
--- a/script.js
+++ b/script.js
@@ -151,7 +151,7 @@ function range(x1,y1,x2,y2) {
 		}
 		result+=")"
 	}
-	return eval(result);	
+	return eval(result);
 }
 
 function count(a) {
@@ -331,12 +331,12 @@ function tablecalc(divID, formula, final) {
 						var tmp=to[1];
 						to[1]=from[1];
 						from[1]=tmp;
-					}			
+					}
 					for (var fx=from[0];fx<=to[0];fx++) {
 						for (var fy=from[1];fy<=to[1];fy++) {
 							if ((fx==cCol) && (fy==cRow) && (tmp_table==table)) {continue;}
 							var tmp=tablecalcVal(fx,fy,tmp_table);
-							tablecalc_log("member["+fx+","+fy+"]="+tmp);					
+							tablecalc_log("member["+fx+","+fy+"]="+tmp);
 							if ( (tmp == 'notnum') || (tmp == 'notset') ) {
 								tablecalcAddDefer(divID,oFormula);
 								if (!final) {
@@ -344,7 +344,7 @@ function tablecalc(divID, formula, final) {
 									return false;
 								} else {
 									members[members.length]=tablecalcVal(fx,fy,tmp_table,1);
-								}					
+								}
 							} else {/*if (tmp!='notset') {*/
 								members[members.length]=tmp;
 							}
@@ -377,8 +377,8 @@ function tablecalc(divID, formula, final) {
 			formula=formula.replace(matchA[i],result);
 		}
 	}
-	
-	formula=formula.replace(/;/g,",");	
+
+	formula=formula.replace(/;/g,",");
 	tablecalc_log("Evaluating: "+formula);
 	var rc;
 	try {
@@ -406,7 +406,7 @@ function tablecalc(divID, formula, final) {
 function tablecalcAddDefer(divID,formula) {
 	if (typeof tablecalc_defer[divID] == 'undefined') {
 		tablecalc_defer[divID]=formula;
-		tablecalc_log("Added defer: "+divID+"=>"+tablecalc_defer[divID]);		
+		tablecalc_log("Added defer: "+divID+"=>"+tablecalc_defer[divID]);
 	}
 }
 
diff --git a/syntax.php b/syntax.php
index 44ffa67..cf13f38 100644
--- a/syntax.php
+++ b/syntax.php
@@ -1,10 +1,10 @@
 <?php
 // must be run within Dokuwiki
 if(!defined('DOKU_INC')) die();
- 
+
 if(!defined('DOKU_PLUGIN')) define('DOKU_PLUGIN',DOKU_INC.'lib/plugins/');
 require_once(DOKU_PLUGIN.'syntax.php');
- 
+
 /**
  * All DokuWiki plugins to extend the parser/rendering mechanism
  * need to inherit from this class
@@ -24,17 +24,17 @@ class syntax_plugin_tablecalc extends DokuWiki_Syntax_Plugin {
                 'url'    => 'https://narezka.org/tablecalc',
                 );
     }
- 
+
     function getType() { return 'substition'; }
     function getSort() { return 1213; }
- 
+
     /**
      * Connect pattern to lexer
      */
     function connectTo($mode) {
             $this->Lexer->addSpecialPattern("~~=[_a-z\ A-Z0-9\%\:\.,\\\/\*\-\+\(\)\&\|#><!=;]*~~", $mode, 'plugin_tablecalc');
     }
- 
+
     /**
      * Handle the match
      */
@@ -68,7 +68,7 @@ class syntax_plugin_tablecalc extends DokuWiki_Syntax_Plugin {
 		return array('formula'=>$match, 'divid'=>'__tablecalc'.$this->id_index,'idx'=>$this->id_index);
 
     }
- 
+
     function render($mode, &$renderer, $data) {
 		global $INFO, $ID, $conf;
 		//var_dump($data);
